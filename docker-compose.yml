version: "3.8"
services:
  rabbit:
    image: rabbitmq:3-management-alpine
    container_name: pdaltagent_rabbitmq
    environment:
      # Username and password for rabbitmq AMQP and management
      - RABBITMQ_DEFAULT_USER=pdaltagent
      - RABBITMQ_DEFAULT_PASS=pdaltagent
    ports:
      # The standard AMQP protocol port
      - '5672:5672'
      # HTTP management UI
      - '15672:15672'
    restart: always
  pdagentd:
    image: martindstone/pdaltagent:0.1
    container_name: pdaltagent_pdagentd
    environment:
      # Set CELERY_BROKER_URL to the URL of a backend for Celery:
      - CELERY_BROKER_URL=pyamqp://pdaltagent:pdaltagent@pdaltagent_rabbitmq//

      # Optional: Set PDAGENTD_API_TOKEN and PDAGENTD_WEBHOOK_DEST_URL if you want the agent to poll PagerDuty logs and 
      # send reconstituted PagerDuty webhooks to a URL that you specify

      # Optional: Set PDAGENTD_API_TOKEN to a PagerDuty API token:
      - PDAGENTD_API_TOKEN=${pagerduty_api_token}

      # Optional: Set PDAGENTD_WEBHOOK_DEST_URL to a URL where you want the agent to send the webhooks
      # - PDAGENTD_WEBHOOK_DEST_URL=http://192.168.1.40:4440/api/39/webhook/q251iSVSIOA5Vb4vjDCIg85WLpcUav1i#HelloWorld
      - PDAGENTD_WEBHOOK_DEST_URL=${rundeck_webhook_url}

      # Very Optional: Set PDAGENTD_GET_ALL_LOG_ENTRIES if you want the agent to generate additional 
      # webhooks for non-standard incident lifecycle events, like priority changes and responder requests 
      # (see PD documentation on incident log entries for the kinds of log entries that will be retrieved)
      # - PDAGENTD_GET_ALL_LOG_ENTRIES=true

      # Optional: Set PDAGENTD_SCRUB_PII if you want to attempt to scrub PII before sending events (see pdaltagent/scrubber.py
      # for details and regexes):
      # - PDAGENTD_SCRUB_PII=true

      # Set PDSEND_EVENTS_BASE_URL to a URL where the pd-send command should send event payloads:
      - PDSEND_EVENTS_BASE_URL=https://localhost:8443

      # Set PDSEND_SKIP_CERT_VERIFY if you want the pd-send command to skip SSL certificate verification
      # (for example if you are using a self-signed certificate:
      - PDSEND_SKIP_CERT_VERIFY=true
    ports:
      # flask
      - '8080:8080'
      - '8443:8443'
    depends_on:
      - rabbit
    restart: always
